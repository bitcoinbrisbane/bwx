{"version":3,"sources":["components/NavMenu.js","components/Layout.js","pages/Home.js","components/FetchHorses.js","components/FetchMeet.js","components/FetchRace.js","components/BetSlip.js","components/Router.js","components/App.js","index.js"],"names":["NavMenu","props","toggleNavbar","bind","state","collapsed","this","setState","Navbar","className","light","Container","NavbarBrand","tag","Link","to","NavbarToggler","onClick","Collapse","isOpen","navbar","NavItem","NavLink","Component","displayName","name","Layout","children","Home","FetchHorses","races","loading","fetch","then","response","json","data","contents","renderRaces","map","race","key","location","href","id","race1","race2","race3","race4","race5","race6","race7","race8","race9","race10","FetchMeet","viewModel","match","params","renderMeet","number","pathname","start","FetchRace","console","log","renderRunners","runners","description","runner","rider","form","win","place","BetSlip","odds","payout_address","address","show","handleChange","handleSubmit","event","value","target","preventDefault","headers","Accept","method","body","JSON","stringify","Coin","EventId","SelectionId","Odds","onSubmit","clas","onChange","type","Modal","handleClose","Header","closeButton","Title","Body","history","createBrowserHistory","Router","exact","path","component","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.44cee85e.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { Collapse, Container, Navbar, NavbarBrand, NavbarToggler, NavItem, NavLink } from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport './NavMenu.css';\n\nexport class NavMenu extends Component {\n  static displayName = NavMenu.name;\n\n  constructor (props) {\n    super(props);\n\n    this.toggleNavbar = this.toggleNavbar.bind(this);\n    this.state = {\n      collapsed: true\n    };\n  }\n\n  toggleNavbar () {\n    this.setState({\n      collapsed: !this.state.collapsed\n    });\n  }\n\n  render () {\n    return (\n      <header>\n        <Navbar className=\"navbar-expand-sm navbar-toggleable-sm ng-white border-bottom box-shadow mb-3\" light>\n          <Container>\n            <NavbarBrand tag={Link} to=\"/\">bwx</NavbarBrand>\n            <NavbarToggler onClick={this.toggleNavbar} className=\"mr-2\" />\n            <Collapse className=\"d-sm-inline-flex flex-sm-row-reverse\" isOpen={!this.state.collapsed} navbar>\n              <ul className=\"navbar-nav flex-grow\">\n                <NavItem>\n                  <NavLink tag={Link} className=\"text-dark\" to=\"/\">Home</NavLink>\n                </NavItem>\n                <NavItem>\n                  <NavLink tag={Link} className=\"text-dark\" to=\"/horses\">Horses</NavLink>\n                </NavItem>\n                <NavItem>\n                  <NavLink tag={Link} className=\"text-dark\" to=\"/betslip\">Bet Slip</NavLink>\n                </NavItem>\n              </ul>\n            </Collapse>\n          </Container>\n        </Navbar>\n      </header>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Container } from 'reactstrap';\nimport { NavMenu } from './NavMenu';\n\nexport class Layout extends Component {\n  static displayName = Layout.name;\n\n  render () {\n    return (\n      <div>\n        <NavMenu />\n        <Container>\n          {this.props.children}\n        </Container>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\n\nconst Home = () => {\n  return (\n    <div>\n      <h1>Bet with coins</h1>\n      <p>No personal infomation gathered</p>\n      <p>Only a payout address is required</p>\n      <p>Tor supported</p>\n      <p>Instant payouts (after transaction confirmation)</p>\n      <p>Great odds</p>\n      <p>Transparent</p>\n      <p>Fast support</p>\n    </div>\n  );\n};\n\nexport default Home;\n","import React, { Component } from \"react\";\n\nexport class FetchHorses extends Component {\n  static displayName = \"\"; //FetchData.name;\n\n  constructor(props) {\n    super(props);\n    this.state = { races: [], loading: true };\n\n    fetch(\"horseracing/\")\n      .then((response) => response.json())\n      .then((data) => {\n        this.setState({ races: data, loading: false });\n      });\n  }\n\n  static renderRaces(races) {\n    return (\n      <table className=\"table table-striped\">\n        <thead>\n          <tr>\n            <th>Track</th>\n            <th>1</th>\n            <th>2</th>\n            <th>3</th>\n            <th>4</th>\n            <th>5</th>\n            <th>6</th>\n            <th>7</th>\n            <th>8</th>\n            <th>9</th>\n            <th>10</th>\n          </tr>\n        </thead>\n        <tbody>\n          {races.map((race) => (\n            <tr key={race.location}>\n              <td>\n                <a href={\"/meet/\" + race.id}>{race.location}</a>\n              </td>\n              <td>{race.race1}</td>\n              <td>{race.race2}</td>\n              <td>{race.race3}</td>\n              <td>{race.race4}</td>\n              <td>{race.race5}</td>\n              <td>{race.race6}</td>\n              <td>{race.race7}</td>\n              <td>{race.race8}</td>\n              <td>{race.race9}</td>\n              <td>{race.race10}</td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    );\n  }\n\n  render() {\n    let contents = this.state.loading ? (\n      <p>\n        <em>Loading...</em>\n      </p>\n    ) : (\n      FetchHorses.renderRaces(this.state.races)\n    );\n\n    return (\n      <div>\n        <h1>Australian and New Zealand Horse Racing</h1>\n        {contents}\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Link } from \"react-router-dom\";\n\nexport class FetchMeet extends Component {\n  static displayName = \"\"; //FetchData.name;\n\n  constructor (props) {\n    super(props);\n    this.state = { viewModel: [], loading: true };\n    const id = this.props.match.params.id;\n\n    fetch('api/meet?id=' + id)\n      .then(response => response.json())\n      .then(data => {\n        this.setState({ viewModel: data, loading: false });\n      });\n  }\n\n  static renderMeet (viewModel) {\n    return (\n      <div>\n        <h1>{viewModel.name}</h1>\n        <h2>Races</h2>\n        <table className='table table-striped'>\n          <thead>\n            <tr>\n              <th>Number</th>\n              <th>Name</th>\n              <th>Jump</th>\n            </tr>\n          </thead>\n          <tbody>\n            { viewModel.races.map(race =>\n              <tr key={race.id}>\n                <td>{race.number}</td>\n                <td>\n                  <Link to={{\n                    pathname: \"/race/\" + race.id\n                    }}>{race.name}</Link>\n                </td>\n                <td>{race.start}</td>\n              </tr>\n            )}\n          </tbody>\n        </table>\n      </div>\n    )\n  }\n\n  render () {\n    let contents = this.state.loading? <p><em>Loading...</em></p> : FetchMeet.renderMeet(this.state.viewModel);\n\n    return (\n      <div>\n        {contents}\n      </div>\n    );\n  }\n}","import React, { Component } from 'react';\n\nexport class FetchRace extends Component {\n\n  constructor (props) {\n    super(props);\n    this.state = { viewModel: [], loading: true };\n\n    console.log(props.match.params.id);\n    \n    fetch('api/race?id=' + props.match.params.id)\n      .then(response => response.json())\n      .then(data => {\n        console.log(data);\n        this.setState({ viewModel: data, loading: false });\n      });\n  }\n\n  static renderRunners (runners) {\n    return (\n      <div>\n        <table className='table table-striped'>\n          <thead>\n            <tr>\n              <th>Name</th>\n              <th>Rider</th>\n              <th>Form</th>\n              <th>Win</th>\n              <th>Place</th>\n            </tr>\n          </thead>\n          <tbody>        \n          {runners.map(runner =>\n              <tr key={runner.name}>\n                <td><a href=\"/betslip\">{runner.name}</a></td>\n                <td>{runner.rider}</td>\n                <td>{runner.form}</td>\n                <td><a href=\"/betslip?type=win&selection=1\">{runner.win}</a></td>\n                <td><a href=\"/betslip?type=place&selection=2\">{runner.place}</a></td>\n              </tr>\n            )}\n          </tbody>\n        </table>\n      </div>\n    );\n  }\n\n  render () {\n    let contents = this.state.loading? <p><em>Loading...</em></p> : FetchRace.renderRunners(this.state.viewModel.runners);\n\n    return (\n      <div>\n        <h1>{ this.state.viewModel.name }</h1>\n        <p>{ this.state.viewModel.description }</p>\n        {contents}\n      </div>\n    );\n  }\n}","import React, { Component } from \"react\";\nimport Modal from \"react-bootstrap/Modal\";\n//import Button from 'react-bootstrap/Button';\n//import QRCode from 'qrcode.react';\n\nexport class BetSlip extends Component {\n  //console.log(props.match.params.id);\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      odds: 0.0,\n      loading: true,\n      payout_address: \"1DugongACGcyyvvgvcy8skYyezsx5jy3aV\",\n      address: \"NA\",\n      show: false,\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    //this.handleClose = this.handleClose.bind(this);\n  }\n\n  handleClose() {\n    this.setState({ show: true });\n  }\n\n  handleChange(event) {\n    this.setState({ value: event.target.value });\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n\n    const betslip = {\n      Coin: \"BTC\",\n      EventId: 29620971,\n      SelectionId: 1,\n      Odds: 2.1,\n    };\n\n    fetch(\"/api/betslip\", {\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      method: \"POST\",\n      body: JSON.stringify(betslip),\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        //alert('Address: ' + data.address);\n        console.log(data);\n        this.setState({ address: data.address });\n        this.setState({ show: true });\n        this.setState({ viewModel: data, loading: false });\n      });\n  }\n\n  render() {\n    return (\n      <div className=\"container\">\n        <h2>Bet slip: {this.state.address}</h2>\n        <div className=\"panel panel-default\">\n          <div className=\"panel-body\">\n            <div className=\"alert alert-info\">\n              You're betting on xxx to win @ {this.state.odds}. Your estimated\n              payout will be displayed on the next page.\n            </div>\n\n            <h3>Payout Address</h3>\n\n            <form onSubmit={this.handleSubmit}>\n              <div clas=\"form-group\">\n                <label>\n                  Enter your bitcoin address where you will receive payouts.\n                  Please make sure you are in control of this address and do not\n                  use an exchange address.\n                </label>\n                <input\n                  id=\"payout\"\n                  className=\"form-control\"\n                  value={this.state.address}\n                  onChange={this.handleChange}\n                ></input>\n              </div>\n              <hr />\n              <button type=\"submit\" className=\"btn btn-primary\">\n                Get Payment Address\n              </button>\n            </form>\n\n            {/* <QRCode value='bitcoin://3MpGFSaRMNsrj3UG1BSM5fEef7GFaqpxhJ' /> */}\n          </div>\n        </div>\n\n        <Modal show={this.state.show} onClick={this.handleClose}>\n          <Modal.Header closeButton>\n            <Modal.Title>Bitcoin Payment Address</Modal.Title>\n          </Modal.Header>\n\n          <Modal.Body>\n            <p>\n              To complete your wager send your wager amount in bitcoin (BTC) to{\" \"}\n              <b>{this.state.address}</b>. This is a unique anonymous address\n              for this wager. Once received with 1 confirmation your wager will\n              be placed.\n            </p>\n          </Modal.Body>\n        </Modal>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport { Router as ReactRouter, Route, Switch } from \"react-router-dom\";\nimport { Layout } from \"../components/Layout\";\nimport Home from \"../pages/Home\";\nimport { FetchHorses } from \"../components/FetchHorses\";\nimport { FetchMeet } from \"../components/FetchMeet\";\nimport { FetchRace } from \"../components/FetchRace\";\nimport { BetSlip } from \"../components/BetSlip\";\nimport { createBrowserHistory } from \"history\";\n\nexport const history = createBrowserHistory();\n\nconst Router = () => (\n  <ReactRouter history={history}>\n    <Layout>\n    <Route exact path=\"/\" component={Home} />\n    <Route path=\"/horses\" component={FetchHorses} />\n    <Route path=\"/race/:id\" component={FetchRace} />\n    <Route path=\"/meet/:id\" component={FetchMeet} />\n    <Route path=\"/betslip\" component={BetSlip} />\n    </Layout>\n  </ReactRouter>\n);\n\nexport default Router;","import React from \"react\";\nimport Router from \"./Router\";\nimport \"./App.css\";\n\nconst App = () => (\n    <Router />\n);\n\nexport default App;\n","import \"bootstrap/dist/css/bootstrap.css\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));"],"sourceRoot":""}