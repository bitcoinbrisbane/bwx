{"version":3,"sources":["components/Nav/Nav.js","components/Layout.js","pages/Home.js","components/Loader.js","components/HorseRacingMatrix.js","pages/HorseRacingPage.js","apis/bwx.js","components/Runners.js","pages/HorseRacePage.js","components/Table.js","components/HistoryTable.js","pages/HistoryPage.js","components/form-inputs/Input.js","pages/PayoutAddressPage.js","components/BetSlip.js","pages/BetSlipPage.js","components/Router.js","components/App.js","index.js"],"names":["memo","links","noBrand","activeTab","label","onClick","history","push","Navbar","bg","expand","Brand","style","cursor","length","Toggle","aria-controls","Collapse","id","Nav","map","i","children","classes","NavDropdown","title","key","className","c","ind","Item","type","Link","Layout","header","noHeader","Home","Loader","loading","noBackground","diameter","noStretch","light","width","height","borderColor","borderTopColor","backgroundColor","position","HorseRacingMatrix","data","meets","meet","location","name","races","race","to","pathname","mnemonic","index","moment","utc","line1","local","format","HorseRacingPage","useSWR","error","isLoading","viewModel","console","log","open","axios","create","baseURL","process","headers","secure","interceptors","request","use","config","a","user","JSON","parse","window","localStorage","getItem","token","Authorization","Promise","reject","Runners","handleClick","proposition","runner","event","_payout","values","coin","payoutaddress","raceid","parseInt","bwx","post","result","runners","number","barrierNumber","riderDriverName","handicapWeight","Button","variant","block","e","fixedOdds","propositionNumber","returnWin","returnPlace","HorseRacePage","useParams","raceNumber","raceName","Table","columnConfig","hidden","props","striped","hover","version","pagination","tableContainerClass","Object","keys","filter","dataField","indexOf","dataSort","address","status","created","HistoryTable","keyField","HistoryPage","FormGroupWrap","isWrapped","Input","onChange","skinny","useField","field","helpers","value","PayoutAddressPage","initialValues","payout","undefined","payoutAddress","onSubmit","setItem","alert","isSubmitting","disabled","BetSlip","payout_address","renderWagerSatus","url","paymentAddress","BetSlipPage","createBrowserHistory","Router","exact","path","component","swrConfig","fetcher","get","then","res","shouldRetryOnError","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.55a00b5a.chunk.js","sourcesContent":["import React, { memo } from \"react\";\nimport { Nav, Navbar, NavDropdown } from \"react-bootstrap\";\nimport { history } from \"../Router\";\n\nconst _Nav = ({ links, noBrand = true, activeTab }) => {\n  // Set default links\n  if (!links)\n    links = [\n      { label: \"Horses\", onClick: () => history.push(\"/horses\") },\n      { label: \"Payout Address\", onClick: () => history.push(\"/payoutaddress\") },\n      { label: \"My Bets\", onClick: () => history.push(\"/mybets\") },\n      { label: \"History\", onClick: () => history.push(\"/history\") }\n    ];\n\n  const renderBrand = () => (\n    <Navbar.Brand\n      style={{ cursor: \"pointer\" }}\n      onClick={() => history.push(\"/\")}\n    >\n    </Navbar.Brand>\n  );\n\n  const renderLinks = () => (\n    <Navbar.Collapse id=\"basic-navbar-nav\">\n      <Nav>\n        {links.map(({ label, onClick, children }, i) => {\n          const classes = label === activeTab ? \"active\" : \"\";\n          return !children ? (\n            <Nav.Link\n              onClick={onClick}\n              key={i}\n              className={classes}\n              children={label}\n            />\n          ) : (\n            <NavDropdown title={label} key={i} className={classes}>\n              {children.map((c, ind) => {\n                const Item = NavDropdown[c.type];\n                return (\n                  <Item onClick={c.onClick} key={ind} children={c.label} />\n                );\n              })}\n            </NavDropdown>\n          );\n        })}\n      </Nav>\n    </Navbar.Collapse>\n  );\n  return (\n    <Navbar bg=\"light\" expand=\"lg\">\n      {!noBrand && renderBrand()}\n      {!links.length || <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />}\n      {!links.length || renderLinks()}\n    </Navbar>\n  );\n};\n\nexport default memo(_Nav);\n","import React, { Component } from \"react\";\n//import { Container } from \"reactstrap\";\n//import { NavMenu } from \"./NavMenu\";\nimport Nav from \"./Nav\";\n\nconst Layout = ({header, children, noHeader, activeTab}) => (\n  <>\n    <header>{noHeader || header || <Nav activeTab={activeTab} />}</header>\n    <main>\n      <div>{children}</div>\n    </main>\n  </>\n)\n\nexport default Layout;\n","import React from \"react\";\nimport Layout from \"../components/Layout\";\n\nconst Home = () => {\n  return (\n    <Layout>\n        <div className=\"container-fluid py-5\">\n          <div className=\"row\">\n            <div className=\"col\">\n\n            <h1>Bet With Coins</h1>\n            <p>BWCs is a privacy focused crypto sports betting site.  We do not capture personal infomation and only ask our punters to supply a payment address.  We do not hold any of our customers funds, and payout immediately after the even has finished and payments confirmed on the blockchain.</p>\n            <p>We encourage all our punters to use PGP encrypted mail, should you need to contact us.  Our PGP public key can be found at </p>\n          </div>\n        </div>\n      </div>\n\n    </Layout>\n\n  );\n};\n\nexport default Home;\n","import React from \"react\";\nimport \"./Loader.scss\";\n\nconst Loader = ({\n  loading,\n  children,\n  noBackground,\n  diameter = \"3rem\",\n  noStretch,\n  light\n}) => {\n  if (!loading) return children || null;\n\n  const style = {\n    width: diameter,\n    height: diameter,\n    borderColor: light ? \"rgba(100, 100, 100, 0.2)\" : \"rgba(0, 0, 0, 0.6)\",\n    borderTopColor: light ? \"rgba(250, 250, 250, 0.5)\" : \"rgba(0, 0, 0, 0.2)\"\n  };\n  return (\n    <div>\n      <div\n        className=\"loader\"\n        style={{\n          backgroundColor: noBackground\n            ? \"rgba(0,0,0,0)\"\n            : \"rgba(255,255,255,0.7)\",\n          position: noStretch ? \"\" : \"absolute\"\n        }}\n      >\n        <div style={style} />\n      </div>\n      {children}\n    </div>\n  );\n};\n\nexport default Loader;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport moment from \"moment\";\n\nconst HorseRacingMatrix = ({ data, ...props }) => {\n\n  const asLocaltime = (raceTime) => {\n    return moment.utc(raceTime).local().format(\"H:mm\");\n  }\n\n  return (\n    <div>\n      <table className=\"table table-striped\">\n        <tbody>\n          { data.meets.map(meet => (\n            <tr key={meet.location}>\n              <td>{meet.name} ({meet.location})</td>\n              \n              { meet.races.map(race => (\n                <td>\n                  <Link to={{ pathname: `/horses/${meet.mnemonic}/${race.index}` }}>R{race.index}</Link>\n                  <br></br>\n                  { moment.utc(race.line1).local().format(\"H:mm\") }\n                </td>\n              ))}\n\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nexport default HorseRacingMatrix;\n","import React from \"react\";\nimport Layout from \"../components/Layout\";\nimport useSWR from \"swr\";\nimport { Link } from \"react-router-dom\";\n//import ErrorMessage from \"../components/ErrorMessage\";\nimport Loader from \"../components/Loader\";\nimport HorseRacingMatrix from \"../components/HorseRacingMatrix\";\n\nconst HorseRacingPage = () => {\n\n  const { data, error } = useSWR(`/horseracing/`);\n  const isLoading = !data && !error;\n\n  const defaultValues = {\"meets\": []};\n  const viewModel = data || defaultValues;\n\n  console.log(data);\n\n  return (\n    <Layout>\n      <div className=\"container-fluid py-5\">\n        <Loader loading={isLoading} />\n        <h1 className=\"mb-3\">Horses</h1>\n        <h2>Today</h2>\n        <HorseRacingMatrix data={viewModel}></HorseRacingMatrix>\n      </div>\n    </Layout>\n  );\n};\n\nexport default HorseRacingPage;\n","import axios from \"axios\";\n\nconst open = axios.create({\n  baseURL: process.env.REACT_APP_API_URL,\n  headers: {\n    \"Cache-Control\": \"no-store\"\n  }\n});\n\nconst secure = axios.create({\n  baseURL: process.env.REACT_APP_API_URL,\n  headers: {\n    \"Cache-Control\": \"no-store\"\n  }\n});\n\nsecure.interceptors.request.use(\n  async config => {\n    const user = JSON.parse(window.localStorage.getItem(\"user\"));\n    const { token } = user;\n    if (token) config.headers.Authorization = `Bearer ${token}`;\n    return config;\n  },\n  error => {\n    return Promise.reject(error);\n  }\n);\n\nexport default { open, secure };\n","import React, { useState } from \"react\";\nimport { Button } from \"react-bootstrap\";\nimport { history } from \"../components/Router\";\nimport bwx from \"../apis/bwx\";\n\nconst Runners = ({ data, mnemonic, id, ...props }) => {\n\n  const handleClick = async (mnemonic, id, proposition, runner, type, event) => {\n    console.log(\"click\");\n    console.log(mnemonic);\n\n    const _payout = localStorage.getItem(\"bwx_address\");\n\n    const values = {\n      coin: \"bch\",\n      mnemonic: mnemonic,\n      payoutaddress: _payout,\n      proposition: proposition,\n      raceid: parseInt(id, 10),\n      runner: runner,\n      type: type\n    };\n\n    const url = \"/betslip\";\n    const result = await bwx.open.post(url, values);\n\n    history.push(`/betslip/${result.data}`);\n  };\n\n  return (\n    <div>\n      <table className=\"table table-striped\">\n        <tbody>\n          <tr>\n            <th>#</th>\n            <th>Runner</th>\n            <th>Rider</th>\n            <th>Weight</th>\n            <th>Win</th>\n            <th>Place</th>\n          </tr>\n          {data.runners.map(runner => (\n            <tr key={runner.name}>\n              <td>{runner.number}</td>\n              <td>\n                {runner.name} ({runner.barrierNumber})\n              </td>\n              <td>{runner.riderDriverName}</td>\n              <td>{runner.handicapWeight} kg</td>\n              <td>\n                <Button\n                  variant=\"primary\"\n                  block=\"true\"\n                  onClick={e =>\n                    handleClick(mnemonic, id, runner.fixedOdds.propositionNumber, runner.number, \"win\", e)\n                  }\n                >\n                  {runner.fixedOdds.returnWin}\n                </Button>\n              </td>\n              <td>\n                <Button\n                  variant=\"primary\"\n                  block=\"true\"\n                  onClick={e =>\n                    handleClick(mnemonic, id, runner.fixedOdds.propositionNumber, runner.number, \"place\", e)\n                  }\n                >\n                  {runner.fixedOdds.returnPlace}\n                </Button>\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n\n      {/* <Modal isOpen={isOpen} onDismiss={onDismiss}>\n      </Modal> */}\n\n\n    </div>\n  );\n};\n\nexport default Runners;\n","import React from \"react\";\nimport Layout from \"../components/Layout\";\n//import ErrorMessage from \"../components/ErrorMessage\";\nimport Loader from \"../components/Loader\";\nimport { useParams } from \"react-router-dom\";\nimport Runners from \"../components/Runners\";\nimport useSWR, { mutate } from \"swr\";\n\nconst HorseRacePage = () => {\n  const { mnemonic, id } = useParams();\n  console.log(mnemonic);\n  console.log(id);\n\n  const { data, error } = useSWR(`/horseracing/${mnemonic}/${id}`);\n  const isLoading = !data && !error;\n\n  const defaultValues = { \"raceNumber\": \"#\", \"runners\": []};\n  const viewModel = data || defaultValues;\n\n  return (\n    <Layout>\n      <div className=\"container-fluid py-5\">\n        <Loader loading={isLoading} />\n        <h1 className=\"mb-3\">\n          R{viewModel.raceNumber} {viewModel.raceName}\n        </h1>\n\n        <Runners data={viewModel} mnemonic={mnemonic} id={id}></Runners>\n      </div>\n    </Layout>\n  );\n};\n\nexport default HorseRacePage;\n","import React from \"react\";\nimport { BootstrapTable, TableHeaderColumn } from \"react-bootstrap-table\";\n\nconst Table = ({ columnConfig = {}, hidden = [], data = [], ...props }) => (\n  <BootstrapTable\n    data={data}\n    striped\n    hover\n    version=\"4\"\n    pagination\n    tableContainerClass=\"table-responsive\"\n    {...props}\n  >\n    {Object.keys(columnConfig)\n      .filter(dataField => hidden.indexOf(dataField) < 0)\n      .map(dataField => (\n        <TableHeaderColumn\n          key={dataField}\n          dataField={dataField}\n          dataSort\n          {...columnConfig[dataField]}\n        />\n      ))}\n  </BootstrapTable>\n);\n\nexport default Table;\n","import React from \"react\";\nimport Table from \"./Table\";\nimport { Link } from \"react-router-dom\";\n\n// dataField (key) props (value)\nconst columnConfig = {\n  address: {\n    children: \"Address\",\n    width: \"40%\"\n  },\n  status: {\n    children: \"Status\",\n    width: \"15%\"\n  },\n  proposition: {\n    children: \"Proposition\"\n  },\n  created: {\n    children: \"Created\"\n  }\n};\n\nconst HistoryTable = ({ data, ...props }) => (\n  <Table\n    data={data}\n    columnConfig={columnConfig}\n    keyField=\"id\"\n    {...props}\n  />\n);\n\nexport default HistoryTable;","import React from \"react\";\nimport Layout from \"../components/Layout\";\nimport useResource from \"../hooks/useResource\";\nimport Loader from \"../components/Loader\";\nimport { useParams } from \"react-router-dom\";\nimport HistoryTable from \"../components/HistoryTable\";\nimport useSWR, { mutate } from \"swr\";\n\nconst HistoryPage = () => {\n\n  const { data, error } = useSWR(\"/bethistory/\");\n  const isLoading = !data && !error;\n\n  console.log(data);\n\n  return (\n    <Layout>\n      <div className=\"container-fluid py-5\">\n        <Loader loading={isLoading} />\n        <h1 className=\"mb-3\">\n          History\n        </h1>\n\n        <HistoryTable data={data} />\n      </div>\n    </Layout>\n  );\n};\n\nexport default HistoryPage;\n","import React from \"react\";\nimport { useField } from \"formik\";\n// import ErrorMessage from \"../ErrorMessage\";\n\nconst FormGroupWrap = ({ isWrapped, children }) =>\n  isWrapped ? <div className=\"form-group\">{children}</div> : <>{children}</>;\n\nconst Input = ({ label, onChange, skinny, ...props }) => {\n  let [field, meta, helpers] = useField(props);\n  if (onChange) field.onChange = e => onChange(e, helpers);\n  if (props.value) field.value = props.value;\n\n  return (\n    <FormGroupWrap isWrapped={!skinny}>\n      {label && <label>{label}</label>}\n      <input className=\"form-control\" {...props} {...field} />\n      {/* <ErrorMessage error={meta.error} isHidden={!meta.touched} /> */}\n    </FormGroupWrap>\n  );\n};\n\nexport default Input;\n","import React from \"react\";\nimport Layout from \"../components/Layout\";\nimport { Button } from \"react-bootstrap\";\nimport { Formik, Form } from \"formik\";\nimport Input from \"../components/form-inputs/Input\";\n\nconst PayoutAddressPage = () => {\n\n  const onSubmit = values => {\n    localStorage.setItem(\"bwx_address\", values.payout);\n    alert(\"Your address \" + values.payout + \" has been saved to your browsers local storage.\");\n  };\n\n  const _payout = localStorage.getItem(\"bwx_address\");\n\n  const initialValues = { \n    payout: _payout\n  }\n\n  const payoutAddress = () => {\n    if (_payout === \"\" || _payout === undefined) {\n      return (\n        <div className=\"alert alert-danger\">\n          You have not entered a payout address!\n        </div>\n      );\n    }\n  };\n\n  return (\n    <Layout>\n      <div className=\"container-fluid\">\n        <div>\n          <h2>Payout Address</h2>\n\n          {payoutAddress()}\n\n          <p>\n            In order to use Bet With Coins we require your bitcoin cash address\n            where you will receive payouts.  These are not stored on our server\n            but in your local machine's browser cookie.  This can be deleted\n            anytime by clearing your cookies.\n          </p>\n\n          <p>\n            <b>\n              Please make sure you are in control of this address and DO NOT use\n              an exchange address.\n            </b>\n          </p>\n\n          <div className=\"card\">\n            <div className=\"card-body\">\n              <Formik initialValues={initialValues} onSubmit={onSubmit}>\n                {({ isSubmitting }) => (\n                  <Form className=\"login-form\">\n                    <label>Your bitcoin cash payout address</label>\n                    <Input name=\"payout\" />\n\n                    <button\n                      className=\"btn btn-primary btn-block relative d-flex justify-content-center\"\n                      type=\"submit\"\n                      disabled={isSubmitting}\n                    >\n                      <span className=\"mx-2\">Save</span>\n                    </button>\n                  </Form>\n                )}\n              </Formik>\n              {/* <form onSubmit={handleSubmit} className=\"col-12\">\n                <div className=\"form-group\">\n                  <label>\n                    Enter your bitcoin address where payouts will be received.\n                  </label>\n                  <input\n                    id=\"payout\"\n                    name=\"payout\"\n                    type=\"text\"\n                    className=\"form-control\"\n                    onChange={formik.handleChange}\n                    value={_payout}\n                  />\n                </div>\n                <div className=\"form-group\">\n                  <Button type=\"submit\" className=\"btn btn-primary\">\n                    Save\n                  </Button>\n                </div>\n              </form> */}\n            </div>\n          </div>\n        </div>\n      </div>\n    </Layout>\n  );\n};\n\nexport default PayoutAddressPage;\n","import React from \"react\";\nimport QRCode from \"qrcode.react\";\nimport useSWR, { mutate } from \"swr\";\n\nconst BetSlip = ({ proposition, address, status, ...props }) => {\n  \n  const payout_address = localStorage.getItem(\"bwx_address\");\n\n  console.log(payout_address);\n  console.log(address);\n  const { data, error } = useSWR(`/bet/status?address=${address}`);\n  console.log(data);\n\n  const isLoading = !data && !error;\n\n  const defaultValues = { \"status\": \"loading\"};\n  const viewModel = data || defaultValues;\n\n  const renderPayoutAddress = () => {\n    if (payout_address === \"\" || payout_address === undefined) {\n      return (\n        <div className=\"alert alert-danger\">\n          You have not entered a payout address!  Click here to set.\n        </div>\n      );\n    } else {\n      return (\n        <div className=\"alert alert-info\">Your payout address is {payout_address}</div>\n      );\n    }\n  };\n\n  const paymentAddress = (address) => {\n    const url = `${address}`;\n    return(<QRCode value={url}></QRCode>)\n  }\n\n  const renderWagerSatus = (status) => {\n      if (status === \"unpaid\")\n      {\n        return (\n          <div className=\"alert alert-danger\">\n            Status: Unpaid.  No bitcoin payment received. Once we have received a payment to this\n            address your wager will be placed.\n          </div>\n        )\n      }\n\n      if (status === \"placed\")\n      {\n        return (\n          <div className=\"alert alert-success\">\n            Status: Your bet is now confirmed!\n          </div>\n        )\n      }\n  }\n\n  return (\n    <div className=\"container\">\n\n      {/* { renderPayoutAddress() } */}\n\n      { renderWagerSatus(viewModel.status) }\n\n      <div className=\"card\">\n        <div className=\"card-header\">Bet Slip for {proposition}</div>\n        <div className=\"card-body\">\n          <h5 className=\"card-title\">Payment Address: {address}</h5>\n          <p className=\"card-text\">\n            Your unique bitcoin address for this wager is <b>{address}</b>.  You can view the status of your bet at any time by visiting this page.  All winning wages will be paid to { payout_address }\n          </p>\n\n          { paymentAddress(address) }\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default BetSlip;\n","import React from \"react\";\nimport Layout from \"../components/Layout\";\nimport { Button } from \"react-bootstrap\";\nimport useResource from \"../hooks/useResource\";\nimport useSWR, { mutate } from \"swr\";\n//import ErrorMessage from \"../components/ErrorMessage\";\nimport Loader from \"../components/Loader\";\nimport { useParams } from \"react-router-dom\";\nimport BetSlip from \"../components/BetSlip\";\n\nconst BetSlipPage = () => {\n  const { address } = useParams();\n  console.log(address);\n\n  const payoutAddress = () => {\n    return localStorage.getItem(\"bwx_address\");\n  }\n\n  // const [data, error, isLoading] = useResource(\n  //   `/betslip?address=${address}`,\n  //   {}, // default data while loading\n  //   { useSecureApi: false }\n  // );\n\n  const { data, error } = useSWR(`/betslip?address=${address}`);\n  const isLoading = !data && !error;\n\n  const defaultValues = { \"address\": address };\n  const viewModel = data || defaultValues;\n\n  return (\n    <Layout>\n      <div className=\"container-fluid py-5\">\n        <Loader loading={isLoading} />\n        <BetSlip proposition={viewModel.proposition} address={viewModel.address}></BetSlip>\n      </div>\n    </Layout>\n  );\n};\n\nexport default BetSlipPage;\n","import React from \"react\";\nimport { Router as ReactRouter, Route, Switch } from \"react-router-dom\";\nimport Home from \"../pages/Home\";\nimport HorseRacingPage from \"../pages/HorseRacingPage\";\nimport HorseRacePage from \"../pages/HorseRacePage\";\nimport HistoryPage from \"../pages/HistoryPage\";\nimport PayoutAddressPage from \"../pages/PayoutAddressPage\";\nimport BetSlipPage from \"../pages/BetSlipPage\";\nimport { createBrowserHistory } from \"history\";\n\nexport const history = createBrowserHistory();\n\nconst Router = () => (\n  <ReactRouter history={history}>\n    <Route exact path=\"/\" component={Home} />\n    <Switch>\n      <Route path=\"/horses/:mnemonic/:id\" component={HorseRacePage} />\n      <Route path=\"/horses\" component={HorseRacingPage} />\n      <Route path=\"/payoutaddress\" component={PayoutAddressPage} />\n      <Route path=\"/betslip/:address\" component={BetSlipPage} />\n      <Route path=\"/history\" component={HistoryPage} />\n    </Switch>\n    \n  </ReactRouter>\n);\n\nexport default Router;","import React from \"react\";\nimport Router from \"./Router\";\nimport \"./App.css\";\nimport { SWRConfig } from \"swr\";\nimport bwx from \"../apis/bwx\";\n\nconst swrConfig = {\n  fetcher: url => bwx.secure.get(url).then(res => res.data),\n  shouldRetryOnError: false\n};\n\nconst App = () => (\n  <SWRConfig value={swrConfig}>\n    <Router />\n  </SWRConfig>\n);\n\nexport default App;\n","import \"bootstrap/dist/css/bootstrap.css\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));"],"sourceRoot":""}