{"ast":null,"code":"var _jsxFileName = \"/home/lucascullen/GitHub/BitcoinBrisbane/bwx/src/components/BetSlip.js\";\nimport React from \"react\";\nimport QRCode from \"qrcode.react\";\nimport useSWR, { mutate } from \"swr\";\n\nconst BetSlip = ({\n  proposition,\n  address,\n  status,\n  ...props\n}) => {\n  const payout_address = localStorage.getItem(\"bwx_address\");\n  console.log(payout_address);\n\n  const renderPayoutAddress = () => {\n    if (payout_address === \"\" || payout_address === undefined) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"alert alert-danger\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 9\n        }\n      }, \"You have not entered a payout address!  Click here to set.\");\n    } else {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"alert alert-info\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 9\n        }\n      }, \"Your payout address is \", payout_address);\n    }\n  };\n\n  const paymentAddress = address => {\n    const url = `${address}`;\n    return /*#__PURE__*/React.createElement(QRCode, {\n      value: url,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 12\n      }\n    });\n  };\n\n  const renderWagerSatus = status => {\n    if (status === \"unpaid\") {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"alert alert-danger\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }\n      }, \"Status: Unpaid.  No bitcoin payment received. Once we have received a payment to this address your wager will be placed.\");\n    }\n\n    if (status === \"placed\") {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"alert alert-success\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }\n      }, \"Status: Your bet is now confirmed!\");\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 5\n    }\n  }, renderWagerSatus(status), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }, \"Bet Slip for \", proposition), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    className: \"card-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 11\n    }\n  }, \"Payment Address: \", address), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"card-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 11\n    }\n  }, \"Your unique bitcoin address for this wager is \", /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 59\n    }\n  }, address), \".  You can view the status of your bet at any time by visiting this page.  All winning wages will be paid to \", payout_address), paymentAddress(address))));\n};\n\nexport default BetSlip;","map":{"version":3,"sources":["/home/lucascullen/GitHub/BitcoinBrisbane/bwx/src/components/BetSlip.js"],"names":["React","QRCode","useSWR","mutate","BetSlip","proposition","address","status","props","payout_address","localStorage","getItem","console","log","renderPayoutAddress","undefined","paymentAddress","url","renderWagerSatus"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAOC,MAAP,IAAiBC,MAAjB,QAA+B,KAA/B;;AAEA,MAAMC,OAAO,GAAG,CAAC;AAAEC,EAAAA,WAAF;AAAeC,EAAAA,OAAf;AAAwBC,EAAAA,MAAxB;AAAgC,KAAGC;AAAnC,CAAD,KAAgD;AAE9D,QAAMC,cAAc,GAAGC,YAAY,CAACC,OAAb,CAAqB,aAArB,CAAvB;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYJ,cAAZ;;AAEA,QAAMK,mBAAmB,GAAG,MAAM;AAChC,QAAIL,cAAc,KAAK,EAAnB,IAAyBA,cAAc,KAAKM,SAAhD,EAA2D;AACzD,0BACE;AAAK,QAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sEADF;AAKD,KAND,MAMO;AACL,0BACE;AAAK,QAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oCAA0DN,cAA1D,CADF;AAGD;AACF,GAZD;;AAcA,QAAMO,cAAc,GAAIV,OAAD,IAAa;AAClC,UAAMW,GAAG,GAAI,GAAEX,OAAQ,EAAvB;AACA,wBAAO,oBAAC,MAAD;AAAQ,MAAA,KAAK,EAAEW,GAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD,GAHD;;AAKA,QAAMC,gBAAgB,GAAIX,MAAD,IAAY;AACjC,QAAIA,MAAM,KAAK,QAAf,EACA;AACE,0BACE;AAAK,QAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oIADF;AAMD;;AAED,QAAIA,MAAM,KAAK,QAAf,EACA;AACE,0BACE;AAAK,QAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8CADF;AAKD;AACJ,GAnBD;;AAqBA,sBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEIW,gBAAgB,CAACX,MAAD,CAFpB,eAIE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAA2CF,WAA3C,CADF,eAEE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAI,IAAA,SAAS,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAA6CC,OAA7C,CADF,eAEE;AAAG,IAAA,SAAS,EAAC,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oEACgD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIA,OAAJ,CADhD,mHAC+KG,cAD/K,CAFF,EAMIO,cAAc,CAACV,OAAD,CANlB,CAFF,CAJF,CADF;AAkBD,CA/DD;;AAiEA,eAAeF,OAAf","sourcesContent":["import React from \"react\";\nimport QRCode from \"qrcode.react\";\nimport useSWR, { mutate } from \"swr\";\n\nconst BetSlip = ({ proposition, address, status, ...props }) => {\n  \n  const payout_address = localStorage.getItem(\"bwx_address\");\n  console.log(payout_address);\n\n  const renderPayoutAddress = () => {\n    if (payout_address === \"\" || payout_address === undefined) {\n      return (\n        <div className=\"alert alert-danger\">\n          You have not entered a payout address!  Click here to set.\n        </div>\n      );\n    } else {\n      return (\n        <div className=\"alert alert-info\">Your payout address is {payout_address}</div>\n      );\n    }\n  };\n\n  const paymentAddress = (address) => {\n    const url = `${address}`;\n    return(<QRCode value={url}></QRCode>)\n  }\n\n  const renderWagerSatus = (status) => {\n      if (status === \"unpaid\")\n      {\n        return (\n          <div className=\"alert alert-danger\">\n            Status: Unpaid.  No bitcoin payment received. Once we have received a payment to this\n            address your wager will be placed.\n          </div>\n        )\n      }\n\n      if (status === \"placed\")\n      {\n        return (\n          <div className=\"alert alert-success\">\n            Status: Your bet is now confirmed!\n          </div>\n        )\n      }\n  }\n\n  return (\n    <div className=\"container\">\n\n      { renderWagerSatus(status) }\n\n      <div className=\"card\">\n        <div className=\"card-header\">Bet Slip for {proposition}</div>\n        <div className=\"card-body\">\n          <h5 className=\"card-title\">Payment Address: {address}</h5>\n          <p className=\"card-text\">\n            Your unique bitcoin address for this wager is <b>{address}</b>.  You can view the status of your bet at any time by visiting this page.  All winning wages will be paid to { payout_address }\n          </p>\n\n          { paymentAddress(address) }\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default BetSlip;\n"]},"metadata":{},"sourceType":"module"}