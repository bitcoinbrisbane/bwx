{"ast":null,"code":"import _slicedToArray from\"/home/lucascullen/GitHub/BitcoinBrisbane/bwx/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _objectWithoutProperties from\"/home/lucascullen/GitHub/BitcoinBrisbane/bwx/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";import React from\"react\";import{useField}from\"formik\";// import ErrorMessage from \"../ErrorMessage\";\nvar FormGroupWrap=function FormGroupWrap(_ref){var isWrapped=_ref.isWrapped,children=_ref.children;return isWrapped?/*#__PURE__*/React.createElement(\"div\",{className:\"form-group\"},children):/*#__PURE__*/React.createElement(React.Fragment,null,children);};var Input=function Input(_ref2){var label=_ref2.label,onChange=_ref2.onChange,skinny=_ref2.skinny,props=_objectWithoutProperties(_ref2,[\"label\",\"onChange\",\"skinny\"]);var _useField=useField(props),_useField2=_slicedToArray(_useField,3),field=_useField2[0],meta=_useField2[1],helpers=_useField2[2];if(onChange)field.onChange=function(e){return onChange(e,helpers);};if(props.value)field.value=props.value;return/*#__PURE__*/React.createElement(FormGroupWrap,{isWrapped:!skinny},label&&/*#__PURE__*/React.createElement(\"label\",null,label),/*#__PURE__*/React.createElement(\"input\",Object.assign({className:\"form-control\"},props,field)));};export default Input;","map":{"version":3,"sources":["/home/lucascullen/GitHub/BitcoinBrisbane/bwx/src/components/form-inputs/Input.js"],"names":["React","useField","FormGroupWrap","isWrapped","children","Input","label","onChange","skinny","props","field","meta","helpers","e","value"],"mappings":"0VAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,QAAT,KAAyB,QAAzB,CACA;AAEA,GAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,UAAGC,CAAAA,SAAH,MAAGA,SAAH,CAAcC,QAAd,MAAcA,QAAd,OACpBD,CAAAA,SAAS,cAAG,2BAAK,SAAS,CAAC,YAAf,EAA6BC,QAA7B,CAAH,cAAkD,wCAAGA,QAAH,CADvC,EAAtB,CAGA,GAAMC,CAAAA,KAAK,CAAG,QAARA,CAAAA,KAAQ,OAA2C,IAAxCC,CAAAA,KAAwC,OAAxCA,KAAwC,CAAjCC,QAAiC,OAAjCA,QAAiC,CAAvBC,MAAuB,OAAvBA,MAAuB,CAAZC,KAAY,6EAC1BR,QAAQ,CAACQ,KAAD,CADkB,wCAClDC,KADkD,eAC3CC,IAD2C,eACrCC,OADqC,eAEvD,GAAIL,QAAJ,CAAcG,KAAK,CAACH,QAAN,CAAiB,SAAAM,CAAC,QAAIN,CAAAA,QAAQ,CAACM,CAAD,CAAID,OAAJ,CAAZ,EAAlB,CACd,GAAIH,KAAK,CAACK,KAAV,CAAiBJ,KAAK,CAACI,KAAN,CAAcL,KAAK,CAACK,KAApB,CAEjB,mBACE,oBAAC,aAAD,EAAe,SAAS,CAAE,CAACN,MAA3B,EACGF,KAAK,eAAI,iCAAQA,KAAR,CADZ,cAEE,2CAAO,SAAS,CAAC,cAAjB,EAAoCG,KAApC,CAA+CC,KAA/C,EAFF,CADF,CAOD,CAZD,CAcA,cAAeL,CAAAA,KAAf","sourcesContent":["import React from \"react\";\nimport { useField } from \"formik\";\n// import ErrorMessage from \"../ErrorMessage\";\n\nconst FormGroupWrap = ({ isWrapped, children }) =>\n  isWrapped ? <div className=\"form-group\">{children}</div> : <>{children}</>;\n\nconst Input = ({ label, onChange, skinny, ...props }) => {\n  let [field, meta, helpers] = useField(props);\n  if (onChange) field.onChange = e => onChange(e, helpers);\n  if (props.value) field.value = props.value;\n\n  return (\n    <FormGroupWrap isWrapped={!skinny}>\n      {label && <label>{label}</label>}\n      <input className=\"form-control\" {...props} {...field} />\n      {/* <ErrorMessage error={meta.error} isHidden={!meta.touched} /> */}\n    </FormGroupWrap>\n  );\n};\n\nexport default Input;\n"]},"metadata":{},"sourceType":"module"}