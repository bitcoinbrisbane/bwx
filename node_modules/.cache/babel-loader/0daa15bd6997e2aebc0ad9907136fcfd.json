{"ast":null,"code":"import { useEffect, useState } from \"react\";\nimport bwx from \"../apis/bwx\";\nconst defaultOptions = {\n  useSecureApi: false\n};\nexport default function useResource(url, defaultData = {}, _options) {\n  const options = { ...defaultOptions,\n    ..._options\n  };\n  const api = options.useSecureApi ? bwx.secure : bwx.open;\n  const [data, setData] = useState(defaultData);\n  const [error, setError] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [toggle, setToggle] = useState(false);\n\n  const refresh = () => setToggle(!toggle);\n\n  useEffect(() => {\n    if (!url) return;\n\n    (async () => {\n      setIsLoading(true);\n\n      try {\n        const response = await api.get(url);\n        setData(response.data);\n      } catch (e) {\n        setError(e.message);\n      }\n\n      setIsLoading(false);\n    })();\n  }, [url, toggle, api]);\n  return [url ? data : defaultData, error, isLoading, refresh];\n}","map":{"version":3,"sources":["/home/lucascullen/GitHub/BitcoinBrisbane/bwx/src/hooks/useResource.js"],"names":["useEffect","useState","bwx","defaultOptions","useSecureApi","useResource","url","defaultData","_options","options","api","secure","open","data","setData","error","setError","isLoading","setIsLoading","toggle","setToggle","refresh","response","get","e","message"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,GAAP,MAAgB,aAAhB;AAEA,MAAMC,cAAc,GAAG;AAAEC,EAAAA,YAAY,EAAE;AAAhB,CAAvB;AAEA,eAAe,SAASC,WAAT,CAAqBC,GAArB,EAA0BC,WAAW,GAAG,EAAxC,EAA4CC,QAA5C,EAAsD;AACnE,QAAMC,OAAO,GAAG,EAAE,GAAGN,cAAL;AAAqB,OAAGK;AAAxB,GAAhB;AACA,QAAME,GAAG,GAAGD,OAAO,CAACL,YAAR,GAAuBF,GAAG,CAACS,MAA3B,GAAoCT,GAAG,CAACU,IAApD;AAEA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBb,QAAQ,CAACM,WAAD,CAAhC;AACA,QAAM,CAACQ,KAAD,EAAQC,QAAR,IAAoBf,QAAQ,CAAC,IAAD,CAAlC;AACA,QAAM,CAACgB,SAAD,EAAYC,YAAZ,IAA4BjB,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM,CAACkB,MAAD,EAASC,SAAT,IAAsBnB,QAAQ,CAAC,KAAD,CAApC;;AAEA,QAAMoB,OAAO,GAAG,MAAMD,SAAS,CAAC,CAACD,MAAF,CAA/B;;AAEAnB,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI,CAACM,GAAL,EAAU;;AACV,KAAC,YAAY;AACXY,MAAAA,YAAY,CAAC,IAAD,CAAZ;;AACA,UAAI;AACF,cAAMI,QAAQ,GAAG,MAAMZ,GAAG,CAACa,GAAJ,CAAQjB,GAAR,CAAvB;AACAQ,QAAAA,OAAO,CAACQ,QAAQ,CAACT,IAAV,CAAP;AACD,OAHD,CAGE,OAAOW,CAAP,EAAU;AACVR,QAAAA,QAAQ,CAACQ,CAAC,CAACC,OAAH,CAAR;AACD;;AACDP,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,KATD;AAUD,GAZQ,EAYN,CAACZ,GAAD,EAAMa,MAAN,EAAcT,GAAd,CAZM,CAAT;AAaA,SAAO,CAACJ,GAAG,GAAGO,IAAH,GAAUN,WAAd,EAA2BQ,KAA3B,EAAkCE,SAAlC,EAA6CI,OAA7C,CAAP;AACD","sourcesContent":["import { useEffect, useState } from \"react\";\nimport bwx from \"../apis/bwx\";\n\nconst defaultOptions = { useSecureApi: false };\n\nexport default function useResource(url, defaultData = {}, _options) {\n  const options = { ...defaultOptions, ..._options };\n  const api = options.useSecureApi ? bwx.secure : bwx.open;\n  \n  const [data, setData] = useState(defaultData);\n  const [error, setError] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [toggle, setToggle] = useState(false);\n\n  const refresh = () => setToggle(!toggle);\n\n  useEffect(() => {\n    if (!url) return;\n    (async () => {\n      setIsLoading(true);\n      try {\n        const response = await api.get(url);\n        setData(response.data);\n      } catch (e) {\n        setError(e.message);\n      }\n      setIsLoading(false);\n    })();\n  }, [url, toggle, api]);\n  return [url ? data : defaultData, error, isLoading, refresh];\n}\n"]},"metadata":{},"sourceType":"module"}