{"ast":null,"code":"import axios from \"axios\";\nconst open = axios.create({\n  baseURL: process.env.REACT_APP_API_URL,\n  headers: {\n    \"Cache-Control\": \"no-store\"\n  }\n});\nconst secure = axios.create({\n  baseURL: process.env.REACT_APP_API_URL,\n  headers: {\n    \"Cache-Control\": \"no-store\"\n  }\n});\nsecure.interceptors.request.use(async config => {\n  const user = JSON.parse(window.localStorage.getItem(\"user\"));\n  const {\n    token\n  } = user;\n  if (token) config.headers.Authorization = `Bearer ${token}`;\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\nexport default {\n  open,\n  secure\n};","map":{"version":3,"sources":["/home/lucascullen/GitHub/BitcoinBrisbane/bwx/src/apis/bwx.js"],"names":["axios","open","create","baseURL","process","env","REACT_APP_API_URL","headers","secure","interceptors","request","use","config","user","JSON","parse","window","localStorage","getItem","token","Authorization","error","Promise","reject"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,MAAMC,IAAI,GAAGD,KAAK,CAACE,MAAN,CAAa;AACxBC,EAAAA,OAAO,EAAEC,OAAO,CAACC,GAAR,CAAYC,iBADG;AAExBC,EAAAA,OAAO,EAAE;AACP,qBAAiB;AADV;AAFe,CAAb,CAAb;AAOA,MAAMC,MAAM,GAAGR,KAAK,CAACE,MAAN,CAAa;AAC1BC,EAAAA,OAAO,EAAEC,OAAO,CAACC,GAAR,CAAYC,iBADK;AAE1BC,EAAAA,OAAO,EAAE;AACP,qBAAiB;AADV;AAFiB,CAAb,CAAf;AAOAC,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4BC,GAA5B,CACE,MAAMC,MAAN,IAAgB;AACd,QAAMC,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWC,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4B,MAA5B,CAAX,CAAb;AACA,QAAM;AAAEC,IAAAA;AAAF,MAAYN,IAAlB;AACA,MAAIM,KAAJ,EAAWP,MAAM,CAACL,OAAP,CAAea,aAAf,GAAgC,UAASD,KAAM,EAA/C;AACX,SAAOP,MAAP;AACD,CANH,EAOES,KAAK,IAAI;AACP,SAAOC,OAAO,CAACC,MAAR,CAAeF,KAAf,CAAP;AACD,CATH;AAYA,eAAe;AAAEpB,EAAAA,IAAF;AAAQO,EAAAA;AAAR,CAAf","sourcesContent":["import axios from \"axios\";\n\nconst open = axios.create({\n  baseURL: process.env.REACT_APP_API_URL,\n  headers: {\n    \"Cache-Control\": \"no-store\"\n  }\n});\n\nconst secure = axios.create({\n  baseURL: process.env.REACT_APP_API_URL,\n  headers: {\n    \"Cache-Control\": \"no-store\"\n  }\n});\n\nsecure.interceptors.request.use(\n  async config => {\n    const user = JSON.parse(window.localStorage.getItem(\"user\"));\n    const { token } = user;\n    if (token) config.headers.Authorization = `Bearer ${token}`;\n    return config;\n  },\n  error => {\n    return Promise.reject(error);\n  }\n);\n\nexport default { open, secure };\n"]},"metadata":{},"sourceType":"module"}