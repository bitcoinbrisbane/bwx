{"ast":null,"code":"var _jsxFileName = \"/home/lucascullen/GitHub/BitcoinBrisbane/bwx/src/components/BetSlip.js\";\nimport React, { Component } from \"react\";\nimport QRCode from \"qrcode.react\";\n\nconst BetSlip = ({\n  proposition,\n  address,\n  ...props\n}) => {\n  const payoutAddress = () => {\n    const payout_address = localStorage.getItem(\"bwx_address\");\n    return payout_address;\n  };\n\n  const renderPayoutAddress = () => {\n    const payout_address = payoutAddress();\n\n    if (payout_address === \"\" || payout_address === undefined) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"alert alert-danger\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 9\n        }\n      }, \"You have not entered a payout address!  Click here to set.\");\n    } else {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"alert alert-info\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 9\n        }\n      }, \"Your payout address is \", payout_address);\n    }\n  };\n\n  const paymentAddress = address => {\n    const url = `${address}`;\n    return /*#__PURE__*/React.createElement(QRCode, {\n      value: url,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 12\n      }\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }\n  }, payoutAddress(), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"alert alert-danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }, \"Status: Unpaid.  No bitcoin payment received. Once we have received a payment to this address your wager will be placed.\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }, \"Bet Slip for \", proposition), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    className: \"card-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 11\n    }\n  }, address), /*#__PURE__*/React.createElement(\"p\", {\n    class: \"card-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 11\n    }\n  }, \"Your unique bitcoin address for this wager is \", /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 59\n    }\n  }, address), \".  You can view the status of your bet at any time by visiting this page.\"), paymentAddress(address))));\n};\n\nexport default BetSlip;","map":{"version":3,"sources":["/home/lucascullen/GitHub/BitcoinBrisbane/bwx/src/components/BetSlip.js"],"names":["React","Component","QRCode","BetSlip","proposition","address","props","payoutAddress","payout_address","localStorage","getItem","renderPayoutAddress","undefined","paymentAddress","url"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,cAAnB;;AAEA,MAAMC,OAAO,GAAG,CAAC;AAAEC,EAAAA,WAAF;AAAeC,EAAAA,OAAf;AAAwB,KAAGC;AAA3B,CAAD,KAAwC;AAEtD,QAAMC,aAAa,GAAG,MAAM;AAC1B,UAAMC,cAAc,GAAGC,YAAY,CAACC,OAAb,CAAqB,aAArB,CAAvB;AACA,WAAOF,cAAP;AACD,GAHD;;AAMA,QAAMG,mBAAmB,GAAG,MAAM;AAChC,UAAMH,cAAc,GAAGD,aAAa,EAApC;;AAEA,QAAIC,cAAc,KAAK,EAAnB,IAAyBA,cAAc,KAAKI,SAAhD,EAA2D;AACzD,0BACE;AAAK,QAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sEADF;AAKD,KAND,MAMO;AACL,0BACE;AAAK,QAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oCAA0DJ,cAA1D,CADF;AAGD;AACF,GAdD;;AAiBA,QAAMK,cAAc,GAAIR,OAAD,IAAa;AAClC,UAAMS,GAAG,GAAI,GAAET,OAAQ,EAAvB;AACA,wBAAO,oBAAC,MAAD;AAAQ,MAAA,KAAK,EAAES,GAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD,GAHD;;AAKA,sBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEIP,aAAa,EAFjB,eAIE;AAAK,IAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gIAJF,eASE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAA2CH,WAA3C,CADF,eAEE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAI,IAAA,SAAS,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA4BC,OAA5B,CADF,eAEE;AAAG,IAAA,KAAK,EAAC,WAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oEACgD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIA,OAAJ,CADhD,8EAFF,EAMIQ,cAAc,CAACR,OAAD,CANlB,CAFF,CATF,CADF;AAuBD,CArDD;;AAuDA,eAAeF,OAAf","sourcesContent":["import React, { Component } from \"react\";\nimport QRCode from \"qrcode.react\";\n\nconst BetSlip = ({ proposition, address, ...props }) => {\n  \n  const payoutAddress = () => {\n    const payout_address = localStorage.getItem(\"bwx_address\");\n    return payout_address;\n  };\n\n\n  const renderPayoutAddress = () => {\n    const payout_address = payoutAddress();\n\n    if (payout_address === \"\" || payout_address === undefined) {\n      return (\n        <div className=\"alert alert-danger\">\n          You have not entered a payout address!  Click here to set.\n        </div>\n      );\n    } else {\n      return (\n        <div className=\"alert alert-info\">Your payout address is {payout_address}</div>\n      );\n    }\n  };\n\n\n  const paymentAddress = (address) => {\n    const url = `${address}`;\n    return(<QRCode value={url}></QRCode>)\n  }\n\n  return (\n    <div className=\"container\">\n\n      { payoutAddress() }\n\n      <div className=\"alert alert-danger\">\n        Status: Unpaid.  No bitcoin payment received. Once we have received a payment to this\n        address your wager will be placed.\n      </div>\n\n      <div className=\"card\">\n        <div className=\"card-header\">Bet Slip for {proposition}</div>\n        <div className=\"card-body\">\n          <h5 className=\"card-title\">{address}</h5>\n          <p class=\"card-text\">\n            Your unique bitcoin address for this wager is <b>{address}</b>.  You can view the status of your bet at any time by visiting this page.  \n          </p>\n\n          { paymentAddress(address) }\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default BetSlip;\n"]},"metadata":{},"sourceType":"module"}