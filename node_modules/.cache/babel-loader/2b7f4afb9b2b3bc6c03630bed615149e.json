{"ast":null,"code":"var _jsxFileName = \"/home/lucascullen/GitHub/BitcoinBrisbane/bwx/src/components/Runners.js\";\nimport React, { useState } from \"react\";\nimport { Button } from \"react-bootstrap\"; //import { Modal } from \"react-bootstrap\";\n\nimport { history } from \"../components/Router\";\nimport bwx from \"../apis/bwx\";\n\nconst Runners = ({\n  data,\n  mnemonic,\n  id,\n  ...props\n}) => {\n  const [show, setShow] = useState(false);\n\n  const handleClick = async (mnemonic, id, runner, type, event) => {\n    const values = {\n      \"coin\": \"btc\",\n      \"raceid\": 7,\n      \"runner\": 2,\n      \"mnemonic\": \"ROC\",\n      \"type\": \"win\",\n      \"payoutaddress\": \"3MpGFSaRMNsrj3UG1BSM5fEef7GFaqpxhJ\"\n    };\n    const url = \"/betslip\";\n    const result = await bwx.open.post(url, values);\n    history.push(`/betslip/${result.data}`);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"table\", {\n    className: \"table table-striped\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }\n  }, \"#\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }\n  }, \"Runner\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }\n  }, \"Rider\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }\n  }, \"Weight\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }\n  }, \"Win\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }\n  }, \"Place\")), data.runners.map(runner => /*#__PURE__*/React.createElement(\"tr\", {\n    key: runner.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 15\n    }\n  }, runner.number), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 15\n    }\n  }, runner.name, \" (\", runner.barrierNumber, \")\"), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 15\n    }\n  }, runner.riderDriverName), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 15\n    }\n  }, runner.handicapWeight, \" kg\"), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"primary\",\n    block: \"true\",\n    onClick: e => handleClick(mnemonic, id, runner.number, \"win\", e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 17\n    }\n  }, runner.fixedOdds.returnWin)), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"primary\",\n    block: \"true\",\n    onClick: () => history.push(`/betslip/${mnemonic}/${id}/${runner.number}?type=place`),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 17\n    }\n  }, runner.fixedOdds.returnPlace)))))));\n};\n\nexport default Runners;","map":{"version":3,"sources":["/home/lucascullen/GitHub/BitcoinBrisbane/bwx/src/components/Runners.js"],"names":["React","useState","Button","history","bwx","Runners","data","mnemonic","id","props","show","setShow","handleClick","runner","type","event","values","url","result","open","post","push","runners","map","name","number","barrierNumber","riderDriverName","handicapWeight","e","fixedOdds","returnWin","returnPlace"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,MAAT,QAAuB,iBAAvB,C,CACA;;AACA,SAASC,OAAT,QAAwB,sBAAxB;AACA,OAAOC,GAAP,MAAgB,aAAhB;;AAEA,MAAMC,OAAO,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,QAAR;AAAkBC,EAAAA,EAAlB;AAAsB,KAAGC;AAAzB,CAAD,KAAsC;AACpD,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBV,QAAQ,CAAC,KAAD,CAAhC;;AAEA,QAAMW,WAAW,GAAG,OAAOL,QAAP,EAAiBC,EAAjB,EAAqBK,MAArB,EAA6BC,IAA7B,EAAmCC,KAAnC,KAA6C;AAE/D,UAAMC,MAAM,GAAG;AACb,cAAQ,KADK;AAEb,gBAAU,CAFG;AAGb,gBAAU,CAHG;AAIb,kBAAY,KAJC;AAKb,cAAQ,KALK;AAMb,uBAAiB;AANJ,KAAf;AASA,UAAMC,GAAG,GAAG,UAAZ;AACA,UAAMC,MAAM,GAAG,MAAMd,GAAG,CAACe,IAAJ,CAASC,IAAT,CAAcH,GAAd,EAAmBD,MAAnB,CAArB;AAEAb,IAAAA,OAAO,CAACkB,IAAR,CAAc,YAAWH,MAAM,CAACZ,IAAK,EAArC;AACD,GAfD;;AAiBA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAO,IAAA,SAAS,EAAC,qBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAHF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF,eAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WALF,eAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aANF,CADF,EASGA,IAAI,CAACgB,OAAL,CAAaC,GAAb,CAAiBV,MAAM,iBACtB;AAAI,IAAA,GAAG,EAAEA,MAAM,CAACW,IAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKX,MAAM,CAACY,MAAZ,CADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGZ,MAAM,CAACW,IADV,QACkBX,MAAM,CAACa,aADzB,MAFF,eAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKb,MAAM,CAACc,eAAZ,CALF,eAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKd,MAAM,CAACe,cAAZ,QANF,eAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAC,SAAhB;AAA0B,IAAA,KAAK,EAAC,MAAhC;AAAuC,IAAA,OAAO,EAAGC,CAAD,IAAOjB,WAAW,CAACL,QAAD,EAAWC,EAAX,EAAeK,MAAM,CAACY,MAAtB,EAA8B,KAA9B,EAAqCI,CAArC,CAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA4GhB,MAAM,CAACiB,SAAP,CAAiBC,SAA7H,CADF,CAPF,eAUE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAC,SAAhB;AAA0B,IAAA,KAAK,EAAC,MAAhC;AAAuC,IAAA,OAAO,EAAE,MAAM5B,OAAO,CAACkB,IAAR,CAAc,YAAWd,QAAS,IAAGC,EAAG,IAAGK,MAAM,CAACY,MAAO,aAAzD,CAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA+HZ,MAAM,CAACiB,SAAP,CAAiBE,WAAhJ,CADF,CAVF,CADD,CATH,CADF,CADF,CADF;AA2CD,CA/DD;;AAiEA,eAAe3B,OAAf","sourcesContent":["import React, { useState } from \"react\";\nimport { Button } from \"react-bootstrap\";\n//import { Modal } from \"react-bootstrap\";\nimport { history } from \"../components/Router\";\nimport bwx from \"../apis/bwx\";\n\nconst Runners = ({ data, mnemonic, id, ...props }) => {\n  const [show, setShow] = useState(false);\n\n  const handleClick = async (mnemonic, id, runner, type, event) => {\n\n    const values = {\n      \"coin\": \"btc\",\n      \"raceid\": 7,\n      \"runner\": 2,\n      \"mnemonic\": \"ROC\",\n      \"type\": \"win\",\n      \"payoutaddress\": \"3MpGFSaRMNsrj3UG1BSM5fEef7GFaqpxhJ\"\n    }\n    \n    const url = \"/betslip\";\n    const result = await bwx.open.post(url, values);\n\n    history.push(`/betslip/${result.data}`);\n  }\n\n  return (\n    <div>\n      <table className=\"table table-striped\">\n        <tbody>\n          <tr>\n            <th>#</th>\n            <th>Runner</th>\n            <th>Rider</th>\n            <th>Weight</th>\n            <th>Win</th>\n            <th>Place</th>\n          </tr>\n          {data.runners.map(runner => (\n            <tr key={runner.name}>\n              <td>{runner.number}</td>\n              <td>\n                {runner.name} ({runner.barrierNumber})\n              </td>\n              <td>{runner.riderDriverName}</td>\n              <td>{runner.handicapWeight} kg</td>\n              <td>\n                <Button variant=\"primary\" block=\"true\" onClick={(e) => handleClick(mnemonic, id, runner.number, \"win\", e)}>{runner.fixedOdds.returnWin}</Button>\n              </td>\n              <td>\n                <Button variant=\"primary\" block=\"true\" onClick={() => history.push(`/betslip/${mnemonic}/${id}/${runner.number}?type=place`)}>{runner.fixedOdds.returnPlace}</Button>\n\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n      {/* <Modal show={show}>\n        <Modal.Header closeButton>\n          <Modal.Title>Modal heading</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>Woohoo, you're reading this text in a modal!</Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\">Close</Button>\n          <Button variant=\"primary\">Save Changes</Button>\n        </Modal.Footer>\n      </Modal> */}\n    </div>\n  );\n};\n\nexport default Runners;\n"]},"metadata":{},"sourceType":"module"}